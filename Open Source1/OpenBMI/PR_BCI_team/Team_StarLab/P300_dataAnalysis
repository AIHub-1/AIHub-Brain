%% LOAD THE OpenBMI TOOLBOX
clear all; close all; clc;
%name={'bykim','dblee','eskim','prchoi','smkang','mhlee','yskim','oykwon','mjkim'}; % session 1 itr, acc 맷파일 순서
%% Set
% name={'1_bykim','2_dblee','3_eskim','4_jhsuh','5_mgjung','7_mjkim','8_oykwon','9_prchoi','10_smkang','11_spseo','12_yskim','13_jyha','14_hmyoo','15_jwlee','16_wbsim','17_hwnoh'}; % session 1
% name={'1_bykim','2_dblee','3_eskim','4_jhsuh','5_mgjung','7_mjkim','9_prchoi','10_smkang','12_yskim'}; % session 2
name={'test'};
session = {'session1'};
fs=100;
%%
for sub=1:length(name)
    % session 1 : 8 sub
    % session 2 : 4 sub
    % 제외: ejlee, sbsim, yelee
    
    task = 'p300_off';
    
    file3 = ['E:\Users\cvpr\Desktop\StarlabDB_2nd\',name{sub},'\'];
    BMI.EEG_DIR=['E:\Users\cvpr\Desktop\StarlabDB_2nd\',name(sub),'\',session];
    BMI.EEG_DIR=cell2mat(BMI.EEG_DIR);
    file=fullfile(BMI.EEG_DIR, task);
    marker={'1','target';'2','nontarget'};
    [EEG.data, EEG.marker, EEG.info]=Load_EEG(file,{'device','brainVision';'marker', marker;'fs', fs});
    field={'x','t','fs','y_dec','y_logic','y_class','class', 'chan'};
    CNT=opt_eegStruct({EEG.data, EEG.marker, EEG.info}, field);
    
    segTime = [-200 800];
    baseTime =[-200 0];
    selTime =[0 800];
    nFeature = 10;
    
    % make classifier
    cnt= prep_selectChannels(CNT, {'Index',[1:32]});
    cnt=prep_filter(cnt, {'frequency', [0.5 40]});
    smt=prep_segmentation(cnt, {'interval', segTime});
    smt=prep_baseline(smt, {'Time',baseTime});
    smt=prep_selectTime(smt, {'Time',selTime});
    forplotsmt_s1_off{sub,1} = smt;
    fv=func_featureExtraction(smt,{'feature','erpmean';'nMeans',nFeature});
    [nDat, nTrials, nChans]= size(fv.x);
    fv.x= reshape(permute(fv.x,[1 3 2]), [nDat*nChans nTrials]);
    [clf_param] = func_train(fv,{'classifier','LDA'});
    
    clear CNT cnt smt fv nDat nTrials nChans BMI baseTime EEG field file file3 marker nFeature segTime selTime task
    
    task = 'p300_on';
    file3 = ['E:\Users\cvpr\Desktop\StarlabDB_2nd\',name{sub},'\'];
    BMI.EEG_DIR=['E:\Users\cvpr\Desktop\StarlabDB_2nd\',name(sub),'\',session];
    BMI.EEG_DIR=cell2mat(BMI.EEG_DIR);
    file=fullfile(BMI.EEG_DIR, task);
    marker={'1','target';'2','nontarget'};
   [EEG.data, EEG.marker, EEG.info]=Load_EEG(file,{'device','brainVision';'marker', marker;'fs', fs});
    field={'x','t','fs','y_dec','y_logic','y_class','class', 'chan'};
    CNT=opt_eegStruct({EEG.data, EEG.marker, EEG.info}, field);
    cnt.CNT = CNT;

        
    % init
    temp3= {'A', 'B', 'C', 'D', 'E', 'F', ...
        'G', 'H', 'I', 'J', 'K', 'L', ...
        'M', 'N', 'O', 'P', 'Q', 'R', ...
        'S', 'T', 'U', 'V', 'W', 'X', ...
        'Y', 'Z', '1', '2', '3', '4', ...
        '5', '6', '7', '8', '9', '_'};
    
    ival = [-200 800];
    baseTime = [-200 0];
    selTime = [0 800];
    fs = cnt.CNT.fs;
    BB=1;
    nFeatures=10;
    spellerText_on='PATTERN_RECOGNITION_MACHINE_LEARNING';
    %     spellerText_on='NEURAL_NETWORKS_AND_DEEP_LEARNING';
    load('C:\Users\Oyeon Kwon\Documents\MATLAB\New_starlab\DataAnalysis\random_cell_order.mat')
    rc_order;
    
    % segmentation
    cnt =prep_filter(cnt.CNT, {'frequency', [0.5 40]});
    smt=prep_segmentation(cnt, {'interval', ival});
    smt=prep_baseline(smt, {'Time',baseTime});
    smt=prep_selectTime(smt, {'Time',selTime});
    smt=prep_selectChannels(smt,{'Index',[1:32]});
%     forplotsmt_s2_on{sub,1} = smt;
    
    dat.x= smt.x;
    dat.fs = smt.fs;
    dat.ival = smt.ival;
    dat.t = smt.t;
    
    % divide for each character
    for add=1:60:length(dat.t)
        dat_char_all.x(:,:,:,BB)=dat.x(:,[add:add+59],:);            % 1 stimulus : 0.1875s ; 27 stimulus : 5.0625s // 2 sequences : 4.5 s
        dat_char_all.t(:,:,:,BB)=dat.t(:,[add:add+59]);            % 1 stimulus : 0.1875s ; 27 stimulus : 5.0625s // 2 sequences : 4.5 s
        BB=BB+1;
    end
    
    % analyze for each character
    for char = 1:length(spellerText_on)
        % init
        in_nc=1;
        nc=1;
        nSeq=1;
        DAT=cell(1,36); % for random speller
        tm_Dat=zeros(36,size(clf_param.cf_param.w,1));
        
        % TM1.x = ( time signal (101) * run (60) * ch (32) ) * chracter (36)
        dat_char.x = dat_char_all.x(:,:,:,char);
        dat_char.t = dat_char_all.t(:,:,:,char);
        dat_char.fs = dat.fs;
        dat_char.ival = dat.ival;
        % feature extraction
        ft_dat=func_featureExtraction(dat_char,{'feature','erpmean';'nMeans',nFeatures}); %% revised 2017.07.28 (oyeon)
        [nDat, nTrials, nCh]= size(ft_dat.x);
        ft_dat.x = reshape(permute(ft_dat.x,[1 3 2]), [nDat*nCh nTrials]); % data reshape (features * ch, trials)-- 2017.07.31 (oyeon)
        
        % predict character
        for i=1:60
            for i2=1:6
                DAT{rc_order{nSeq}(in_nc,i2)}(end+1,:) = ft_dat.x(:,nc);
            end
            for i2=1:36
                if size(DAT{i2},1)==1
                    tm_Dat(i2,:)=DAT{i2};
                else
                    tm_Dat(i2,:)=mean(DAT{i2});
                end
            end
            %             CF_PARAM=classifier{sub,1};
            CF_PARAM = clf_param;
            [Y]=func_predict(tm_Dat', CF_PARAM);
            [a1 a2]=min(Y);
            t_char2(char,nSeq)= temp3{a2};
            t_char22(char,nc)= temp3{a2};
            
            nc=nc+1;
            in_nc=in_nc+1;
            if in_nc>12
                in_nc=1;
                nSeq=nSeq+1;
            end
        end
        clear DAT tm_Dat Y a b a1 a2
    end
    clear add baseTime BB CF_PARAM char clf_param cnt dat dat_char dat_char_all tm_Dat Y DAT
    clear ft_dat fv i i2 in_nc ival nc nCh nDat nFeature nFeatures nSeq nTrials segTime selTime smt temp3 nChans
    clear BMI CNT EEG field file file3 marker rc_order 
    
    for seq=1:5
        for nchar=1:length(spellerText_on)
            acc2(nchar, seq)=strcmp(spellerText_on(nchar),t_char2(nchar,seq));
        end
    end
    
    no_=sum(acc2)/length(spellerText_on);
    ACC_N(sub,:)=no_;
    
    t_1= 2.75; % 1seq :2.75s
    for i=1:5
        t2(i)=t_1*i;
    end
    
    n = 36;
    no_b = no_.*log2(no_) + (1-no_).*log2((1-no_)/(n-1)) + log2(n);
    ind = find(isnan(no_b) == 1);
    no_b(ind) = log2(n);
    no_itr = [no_b ./ (t2./60)];
    ITR_N(sub,:)=no_itr;  
    
    clear acc2 i ind n nchar no_ no_b no_itr seq t2 t_1 t_char2 t_char22
end
%% Acc

ac_mean=mean(ACC_N);
it_mean=mean(ITR_N);

figure
plot(ac_mean,'g');
figure
plot(it_mean,'m');

%% for plot

T_c=[]; T_o=[]; N_c=[]; N_o=[];

for sub=1:length(name)
smt = forplotsmt_s1_off{sub,1};
smt=prep_selectChannels(smt,{'Name',{'Cz', 'Oz'}});
smt=prep_selectTime(smt, {'Time',selTime});

plot_x = 0:10:800;
%
t_c = smt.x(:,smt.y_logic(1,:),1);
t_o = smt.x(:,smt.y_logic(1,:),2);
n_c = smt.x(:,smt.y_logic(2,:),1);
n_o = smt.x(:,smt.y_logic(2,:),2);

T_c = [T_c t_c];
T_o = [T_o t_o];
N_c = [N_c n_c];
N_o = [N_o n_o];
end

t_c = mean(T_c,2);
t_o = mean(T_o,2);
n_c = mean(N_c,2);
n_o = mean(N_o,2);

figure;
subplot(2,1,1); plot(plot_x, t_c); hold on; plot(plot_x, n_c); title('Cz'); legend('target','Non-t');
subplot(2,1,2); plot(plot_x, t_o); hold on; plot(plot_x, n_o); title('Oz'); legend('target','Non-t');
%%
% forplotsmt_s1_off{3,1} = mhleesmt_s1_off{1,1}; 
% forplotsmt_s2_on{3,1} = mhleesmt_s1_on{1,1};
% T_c=[]; T_o=[]; N_c=[]; N_o=[];
% 
% 
% for sub=1:3
% smt = forplotsmt_s2_on{sub,1};
% smt=prep_selectChannels(smt,{'Name',{'Cz', 'Oz'}});
% 
% plot_x = 0:10:800;
% %
% t_c = smt.x(:,smt.y_logic(1,:),1);
% t_o = smt.x(:,smt.y_logic(1,:),2);
% n_c = smt.x(:,smt.y_logic(2,:),1);
% n_o = smt.x(:,smt.y_logic(2,:),2);
% 
% T_c = [T_c t_c];
% T_o = [T_o t_o];
% N_c = [N_c n_c];
% N_o = [N_o n_o];
% end
% 
% t_c = mean(T_c,2);
% t_o = mean(T_o,2);
% n_c = mean(N_c,2);
% n_o = mean(N_o,2);
% 
% figure;
% subplot(2,1,1); plot(plot_x, t_c); hold on; plot(plot_x, n_c); title('Cz'); legend('target','Non-t');
% subplot(2,1,2); plot(plot_x, t_o); hold on; plot(plot_x, n_o); title('Oz'); legend('target','Non-t');
% 









